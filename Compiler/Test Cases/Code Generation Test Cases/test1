start BOF procedures EOF
BOF BOF
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID foo
LPAREN (
params
RPAREN )
LBRACE {
dcls dcls dcl BECOMES NUM SEMI
dcls dcls dcl BECOMES NUM SEMI
dcls
dcl type ID
type INT
INT int
ID local
BECOMES =
NUM 99
SEMI ;
dcl type ID
type INT
INT int
ID k
BECOMES =
NUM 32
SEMI ;
statements statements statement
statements
statement lvalue BECOMES expr SEMI
lvalue ID
ID local
BECOMES =
expr term
term factor
factor ID
ID k
SEMI ;
RETURN return
expr expr PLUS term
expr term
term factor
factor NUM
NUM 62
PLUS +
term factor
factor ID
ID local
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID bar
LPAREN (
params
RPAREN )
LBRACE {
dcls dcls dcl BECOMES NUM SEMI
dcls dcls dcl BECOMES NUM SEMI
dcls dcls dcl BECOMES NUM SEMI
dcls
dcl type ID
type INT
INT int
ID local
BECOMES =
NUM 8
SEMI ;
dcl type ID
type INT
INT int
ID b
BECOMES =
NUM 3
SEMI ;
dcl type ID
type INT
INT int
ID c
BECOMES =
NUM 10
SEMI ;
statements statements statement
statements statements statement
statements
statement lvalue BECOMES expr SEMI
lvalue ID
ID b
BECOMES =
expr expr MINUS term
expr expr PLUS term
expr expr PLUS term
expr term
term factor
factor NUM
NUM 5
PLUS +
term factor
factor NUM
NUM 6
PLUS +
term term STAR factor
term factor
factor LPAREN expr RPAREN
LPAREN (
expr expr MINUS term
expr term
term factor
factor NUM
NUM 3
MINUS -
term factor
factor NUM
NUM 2
RPAREN )
STAR *
factor NUM
NUM 4
MINUS -
term term SLASH factor
term factor
factor NUM
NUM 6
SLASH /
factor NUM
NUM 3
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue ID
ID b
BECOMES =
expr term
term factor
factor ID
ID c
SEMI ;
RETURN return
expr expr MINUS term
expr term
term factor
factor ID
ID local
MINUS -
term factor
factor ID LPAREN RPAREN
ID foo
LPAREN (
RPAREN )
SEMI ;
RBRACE }
procedures main
main INT WAIN LPAREN dcl COMMA dcl RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
WAIN wain
LPAREN (
dcl type ID
type INT STAR
INT int
STAR *
ID a
COMMA ,
dcl type ID
type INT
INT int
ID b
RPAREN )
LBRACE {
dcls dcls dcl BECOMES NUM SEMI
dcls dcls dcl BECOMES NUM SEMI
dcls
dcl type ID
type INT
INT int
ID local
BECOMES =
NUM 5
SEMI ;
dcl type ID
type INT
INT int
ID k
BECOMES =
NUM 8
SEMI ;
statements statements statement
statements statements statement
statements
statement lvalue BECOMES expr SEMI
lvalue ID
ID local
BECOMES =
expr term
term factor
factor ID
ID k
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue ID
ID local
BECOMES =
expr expr MINUS term
expr expr PLUS term
expr term
term factor
factor NUM
NUM 1
PLUS +
term term STAR factor
term factor
factor NUM
NUM 2
STAR *
factor NUM
NUM 3
MINUS -
term term PCT factor
term term SLASH factor
term factor
factor NUM
NUM 4
SLASH /
factor NUM
NUM 5
PCT %
factor NUM
NUM 6
SEMI ;
RETURN return
expr expr PLUS term
expr expr PLUS term
expr term
term factor
factor ID LPAREN RPAREN
ID foo
LPAREN (
RPAREN )
PLUS +
term factor
factor ID LPAREN RPAREN
ID bar
LPAREN (
RPAREN )
PLUS +
term factor
factor ID
ID local
SEMI ;
RBRACE }
EOF EOF